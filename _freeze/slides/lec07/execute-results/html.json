{
  "hash": "eec2e3cc1c1ea76ef605069b285b6567",
  "result": {
    "markdown": "---\ntitle: \"ggplot2\"\nauthor: \"Dr. Alexander Fisher\"\nexecute:\n  warning: true\nformat: \n    revealjs:\n      smaller: true\n---\n\n\n## Announcements\n\n-   exam 1 date on [schedule](/schedule.html)\n\n-   teams for lab 03; see announcement on slack\n\n# \n\n![](images/ggplot2-logo.png){fig-align=\"center\"}\n\n. . .\n\nincluded in the tidyverse package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n## Basics\n\n`ggplot2` is the package. `ggplot` is the main function.\n\n-   the first argument is a data frame we want to plot from\n\n-   the next argument is a list of variables (columns) of our data frame that we want to visualize. These go in the aesthetic `aes()` function.\n\n# Example (step by step)\n\n## Blank canvas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n:::\n\n\n::: panel-tabset\n### code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  ggplot()\n```\n:::\n\n\n### plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n:::\n\n## x and y aesthetics\n\n::: panel-tabset\n### code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(aes(x = flipper_length_mm, y = bill_depth_mm))\n```\n:::\n\n\n### plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n:::\n\n## add a geometry\n\n::: panel-tabset\n### code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(aes(x = flipper_length_mm, y = bill_depth_mm)) +\n  geom_point()\n```\n:::\n\n\n### plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n:::\n\n## labels\n\n::: panel-tabset\n### code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(aes(x = flipper_length_mm, y = bill_depth_mm)) +\n  geom_point() + \n  labs(x = \"Flipper length (mm)\", y = \"Bill depth (mm)\",\n       title = \"Bill depth vs flipper length distribution\",\n       subtitle = \"Penguins from the arctic\",\n       caption = \"data from palmerpenguins R package\")\n```\n:::\n\n\n### plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n:::\n\n## add theme and color aesthetic\n\n::: panel-tabset\n### code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(aes(x = flipper_length_mm, y = bill_depth_mm,\n             color = island)) +\n  geom_point() + \n  labs(x = \"Flipper length (mm)\", y = \"Bill depth (mm)\",\n       color = \"Island\",\n       title = \"Bill depth vs flipper length distribution\",\n       subtitle = \"Penguins from the arctic\",\n       caption = \"data from palmerpenguins R package\") +\n  theme_bw()\n```\n:::\n\n\n### plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n:::\n\n## faceting\n\n::: panel-tabset\n### code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  filter(!is.na(sex)) %>%\n  ggplot(aes(x = flipper_length_mm, y = bill_depth_mm,\n             color = island)) +\n  geom_point() + \n  labs(x = \"Flipper length (mm)\", y = \"Bill depth (mm)\",\n       color = \"Island\",\n       title = \"Bill depth vs flipper length distribution\",\n       subtitle = \"Penguins from the arctic\",\n       caption = \"data from palmerpenguins R package\") +\n  theme_bw() +\n  facet_wrap(~ sex)\n```\n:::\n\n\n### plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n:::\n\n# General ggplot\n\n## Anatomy of a ggplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = [dataframe],\n  aes(\n    x = [var_x], y = [var_y], \n    color = [var_for_color], \n    fill  = [var_for_fill], \n    shape = [var_for_shape],\n    size  = [var_for_size],\n    alpha = [var_for_alpha],\n    ...#other aesthetics\n  )\n) +\n  geom_<some_geom>([geom_arguments]) +\n  ... # other geoms\n  scale_<some_axis>_<some_scale>() +\n  facet_<some_facet>([formula]) +\n  ... # other options\n```\n:::\n\n\nTo visualize multivariate relationships we can add variables to our visualization by specifying aesthetics: color, size, shape, linetype, alpha, or fill; we can also add facets based on variable levels.\n\n## Variable mappings (aesthetics)\n\nThe name of the argument is `mapping` because it says how to \"map\" variables to a visual aesthetic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(mapping = aes(x = bill_depth_mm, y = flipper_length_mm))\n```\n:::\n\n\n. . .\n\nWhen does an aesthetic (visual) go inside function `aes()`?\n\n-   If you want an aesthetic to be reflective of a variable's values, it must go inside `aes()`.\n\n-   If you want to set an aesthetic manually and not have it convey information about a variable, use the aesthetic's name **outside** of `aes()`, e.g. in the geometry, and set it to your desired value.\n\n. . .\n\n::: panel-tabset\n### code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_histogram(color = \"gold\", fill = \"steelblue\")\n```\n:::\n\n\n### plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-36-1.png){fig-pos='center' width=576}\n:::\n:::\n\n:::\n\n## Continuous and discrete variables\n\nAesthetics for continuous and discrete variables are measured on continuous and discrete scales, respectively.\n\n::: panel-tabset\n### glimpse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 234\nColumns: 11\n$ manufacturer <chr> \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        <chr> \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        <dbl> 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         <int> 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          <int> 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        <chr> \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          <int> 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           <chr> \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        <chr> \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n```\n:::\n:::\n\n\n### code 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>%\n  ggplot(aes(x = cyl, y = cty)) +\n  geom_boxplot() +\n  labs(x = \"Vehicle cylinders\", y = \"City MPG\",\n       title = \"Fuel efficiency by year\") +\n  theme_bw()\n```\n:::\n\n\n### plot 1\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-42-1.png){width=960}\n:::\n:::\n\n\n### code 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>%\n  ggplot(aes(x = as.factor(cyl), y = cty)) +\n  geom_boxplot() +\n  labs(x = \"Vehicle cylinders\", y = \"City MPG\",\n       title = \"Fuel efficiency by year\") +\n  theme_bw()\n```\n:::\n\n\n### plot 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-46-1.png){width=960}\n:::\n:::\n\n:::\n\n## Common geometries\n\n| geometry           | description                                              |\n|-------------------|-----------------------------------------------------|\n| `geom_point()`     | scatter plot                                             |\n| `geom_histogram()` | histogram                                                |\n| `geom_boxplot()`   | box plot                                                 |\n| `geom_density()`   | density plot                                             |\n| `geom_violin()`    | violin plot                                              |\n| `geom_raster()`    | heat map                                                 |\n| `geom_line()`      | connect observations in a line                           |\n| `geom_bar()`       | bar plot (try with argument `position = fill`)           |\n| `geom_smooth()`    | add a smooth trend line (try with argument `method = lm` |\n| `geom_abline()`    | add an algebraic line                                    |\n\n-   See <https://ggplot2.tidyverse.org/reference/> for more geometries.\n\n-   Some geometries are in additional packages, e.g. see `geom_density_ridges()` within the package `ggridges` to create plots [like these](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html)\n\n## Themes  \n\n![](images/avatar-theme.png){fig-align=\"center\"}\n\n-   image credit: [`tvthemes` package by Ryo Nakagawra](https://ryo-n7.github.io/2019-05-16-introducing-tvthemes-package/)\n\n-   See <https://ggplot2.tidyverse.org/reference/ggtheme.html> for a list of default themes.\n\n## Plotting functions\n\n`stat_function()` is a powerful tool\n\n::: panel-tabset\n\n### code\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nx = -10:10 # range\ndf = data.frame(x)\n\nf = function(x) {\n  dnorm(x)\n}\n\ndf %>%\n  ggplot(aes(x = x)) +\n  stat_function(fun=f) +\n  labs(y = \"Density\", \n       title = \"Gaussian density\")\n```\n:::\n\n### plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-50-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n:::\n\n## Save the plot\n\n-   Save a plot as a file on your computer with `ggsave()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  ggplot(aes(x = bill_depth_mm, y = species)) + \n  geom_boxplot() +\n  labs(x = \"Bill depth (mm)\", y = \"Species\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-52-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"penguin-box-plot.png\", \n       plot = last_plot())\n```\n:::\n\n\n# Advanced ggplot\n\n## Annotate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  annotate(geom = \"text\", x = 10, y = 10, \n           label = \"Text at (10, 10)\", size = 10)\n```\n\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-56-1.png){width=960}\n:::\n:::\n\n\n## Patchwork\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n```\n:::\n\n\n\n::: panel-tabset \n\n### code\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = penguins %>%\n  ggplot(aes(x = species, y = bill_depth_mm)) +\n  geom_violin() +\n  labs(x = \"Species\", y = \"Bill depth (mm)\",\n       title = \"Violin plots\")\n\np2 = penguins %>%\n  ggplot(aes(x = bill_depth_mm, y = flipper_length_mm, color = island)) +\n  geom_point() +\n  labs(x =\"Bill depth (mm)\",\n       y = \"Flipper length (mm)\",\n       color = \"Island\",\n       title = \"Flipper length vs bill depth\")\n\np3 = penguins %>%\n  ggplot(aes(x = body_mass_g)) +\n  geom_histogram(fill = \"steelblue\") +\n  labs(x = \"Body mass (g)\",\n       y = \"Count\",\n       title = \"Distribution of penguin body mass\")\n\n(p1 + p2) / p3\n```\n:::\n\n\n### plot\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-62-1.png){width=960}\n:::\n:::\n\n\n:::\n\n## Patchwork layout\n\n\n::: panel-tabset\n\n### horizontal\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2 + \n  plot_annotation(title = \"Palmer Penguins\", tag_levels = c(\"A\"))\n```\n\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-64-1.png){width=960}\n:::\n:::\n\n\n### vertical\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2 + plot_layout(ncol = 1) + \n  plot_annotation(title = \"Palmer Penguins\", tag_levels = c(\"i\"))\n```\n\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-66-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n## Custom ggplot functions with `ggproto`\n\n\nEncircle the data points that have the minimum x-value\n\n::: panel-tabset\n\n### Output\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-68-1.png){width=960}\n:::\n:::\n\n\n### code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncars %>%\n  ggplot(aes(x = speed, y = dist)) +\n  geom_point() +\n  stat_min(size = 5) +\n  labs(title = \"Car speed and stopping distance\",\n       x = \"Speed\", y = \"Distance\") \n```\n:::\n\n\n\n### stat_min\n\n::: {.cell}\n\n```{.r .cell-code}\n# create ggproto object\nStatMin = ggproto(\"StatMin\", Stat,\n                       compute_group = function(data, scales) {\n                          xvar = data$x\n                          yvar = data$y\n                          \n                          data[xvar == min(xvar), ,drop = FALSE]\n                       },\n                       \n                       required_aes = c(\"x\", \"y\")\n                       \n                       )\n\n# create stat function\nstat_min = function(mapping = NULL, data = NULL, geom = \"point\",\n                         position = \"identity\", na.rm = FALSE, show.legend = NA, \n                         inherit.aes = TRUE,\n                         shape = 21, size = 5, color = \"red\",\n                         alpha = 1, ...) {\n  layer(\n    stat = StatMin, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(color = color, shape = shape, size = size, alpha = alpha, \n                  na.rm = na.rm, ...)\n  )\n}\n```\n:::\n\n\n:::\n\n\n## `gganimate` example\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate) # animate\nlibrary(gapminder) # data\n```\n:::\n\n\n::: panel-tabset\n\n### code-plot\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = pop, colour = country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  scale_x_log10() +\n  facet_wrap(~continent) +\n  theme_bw(base_size = 16)\n```\n:::\n\n\n### plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-78-1.png){width=960}\n:::\n:::\n\n\n### code-animate\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10\"}\nggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = pop, colour = country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  scale_x_log10() +\n  facet_wrap(~continent) +\n  theme_bw(base_size = 16) +\n  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'Life expectancy') +\n  transition_time(year) +\n  ease_aes('linear')\n```\n:::\n\n\n### animation\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-82-1.gif)\n:::\n:::\n\n\n\n\n:::\n\n## `gganimate` summary\n\nCore functions\n\n  - `transition_*()` defines how the data should be spread out and how it relates to itself across time.\n\n  - `view_*()` defines how the positional scales should change along the animation.\n\n  - `shadow_*()` defines how data from other points in time should be presented in the given point in time.\n\n  - `enter_*()` / `exit_*()` defines how new data should appear and how old data should disappear during the course of the animation.\n\n  - `ease_aes()` defines how different aesthetics should be eased during transitions.\n\n- Label variables\n\n  - function dependent, use { } to access their values.\n\n- See [https://gganimate.com](https://gganimate.com)\n\n\n\n## LaTeX labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(latex2exp)\n\nggplot() +\n  ylab(TeX(\"Mean: $y = \\\\beta_0 + \\\\beta_1 x_1 + \\\\beta_2 x_2$\")) +\n  xlab(TeX(\"$\\\\frac{\\\\alpha}{\\\\gamma}$\")) +\n  theme_grey(base_size = 20)\n```\n\n::: {.cell-output-display}\n![](lec07_files/figure-revealjs/unnamed-chunk-84-1.png){width=960}\n:::\n:::\n\n\n## Style\n\n- Keep plots simple\n- Don't redundantly encode information\n- Use descriptive titles\n- Always label units\n- Use color and/or annotations to draw attention to a region of your plot\n- Never make a pie chart\n- Don't use the default ggplot background. When in doubt, `theme_bw()` is **always** better.\n\n## Further exploring\n\n- `ggplot2` [documentation](https://cran.r-project.org/web/packages/ggplot2/ggplot2.pdf)\n\n- `ggplot2` extensions: [https://exts.ggplot2.tidyverse.org/gallery/](https://exts.ggplot2.tidyverse.org/gallery/)\n\n- [top 50 ggplot2 visualizations](http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html) with code!\n\n- [extending ggplot2](https://ggplot2.tidyverse.org/articles/extending-ggplot2.html) with `ggproto`\n\n- [patchwork](https://github.com/thomasp85/patchwork)\n\n\n\n<!-- \n::: columns\n::: {.column width=\"50%\"}\n:::\n::: {.column width=\"50%\"}\n:::\n:::\n-->\n",
    "supporting": [
      "lec07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}