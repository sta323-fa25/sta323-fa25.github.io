---
title: "Project"
format: html
---

## Dates

-   Final project presentations will take place in-person in both lab and class **Tuesday Dec 2**

-   The report and completed GitHub repo is due **Friday December 5** at 5:00pm

:::callout-important
No late work will be accepted.
:::

## Project description
50
The goal of the final project is to demonstrate mastery of material learned in this class. An additional goal of the final project is to give you experience working in a team-based development setting.

The final project is purposefully open-ended. You may choose to demonstrate mastery of any element of the course. Possible final projects include:

-   Find a data set of interest, write down a data-generative model and fit the model to the data (e.g compute the MLEs of parameters using numerical methods discussed in class)

-   Build a shiny app that does something useful. For example your app may help you analyze data, illustrate an algorithm, etc.

-   Procure or find a messy data set and write a hypothesis you can investigate with the data. Next tidy, clean and wrangle the data. Finally create effective visualization(s) using advanced ggplot methods discussed in class to answer your question.

-   Something not listed here, e.g. implement an algorithm from a paper. Please reach out to Dr. Fisher if you are unsure whether your proposed idea is a good fit for the final project.

::: callout-important
## Reminder

All team members should be prepared to describe all aspects of the project.

Team work policy from the syllabus:

> The final project and several labs will be completed in teams. All group members are expected to participate equally. Commit history may be used to give individual team members different grades. Your grade may differ from the rest of your group.
:::

## Criteria

The final project has three deliverables:

-   a written report describing your project

-   a GitHub repo with clear instructions in the README to reproduce all of your results

-   a final presentation during the last lab session of the semester (slides, chalk-talk, up to you)

The project report should be no longer than 10 pages, including text, code, figures, and other output. If your report is longer, you need to make it shorter. There is no minimum report length or required section headers.

Your report should be professionally formatted (e.g. consistent citation style, no raw `r` code output and following formatting guidelines consistent with other assignments in the course).

## Rubric

The project is graded out of a 100 point total

### report `60pts`

The report should clearly motivate the project, explain the aim, results and conclusions within a strict 10 page limit. In the written report be sure to:

- Be concise with your language. Say what you need to in as few words as possible to be effective.

- Explicitly write out any math (e.g. likelihood or model etc.)

- Critique your own analyses and/or discuss future improvements

- List a brief (1 or 2 sentence) summary of the relative contributions of each team member. E.g. "Aang built the models, Katara implemented them in R, and Sokka wrote the introduction and discussion."

### presentation `25pts`

The presentation should clearly motivate the project, explain the aim, results and conclusions within a strict 6 minute time-limit. Presentations should be between 5 and 6 minutes.

- Choices made (e.g. using a specific model, using a specific plot geometry) should be defensible. You should be prepared to defend your choice of model/plot/etc. during Q&A.


### reproducibility `15pts`

- README should describe the project briefly and detail how to reproduce the results

- All files to reproduce the work should be in the GitHub repo

- No rendered/generated files (pdf) should be in the repo unless necessary (shiny app, website html, etc.)
